<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何将自己编写的对端口3333监听的Server添加到和springboot项目一同启动</title>
      <link href="/2020/10/30/%E5%A6%82%E4%BD%95%E5%B0%86%E8%87%AA%E5%B7%B1%E7%BC%96%E5%86%99%E7%9A%84%E5%AF%B9%E7%AB%AF%E5%8F%A33333%E7%9B%91%E5%90%AC%E7%9A%84Server%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%92%8Cspringboot%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%90%8C%E5%90%AF%E5%8A%A8%E3%80%82/"/>
      <url>/2020/10/30/%E5%A6%82%E4%BD%95%E5%B0%86%E8%87%AA%E5%B7%B1%E7%BC%96%E5%86%99%E7%9A%84%E5%AF%B9%E7%AB%AF%E5%8F%A33333%E7%9B%91%E5%90%AC%E7%9A%84Server%E6%B7%BB%E5%8A%A0%E5%88%B0%E5%92%8Cspringboot%E9%A1%B9%E7%9B%AE%E4%B8%80%E5%90%8C%E5%90%AF%E5%8A%A8%E3%80%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="如何将自己编写的对端口3333监听的Server添加到和springboot项目一同启动。"><a href="#如何将自己编写的对端口3333监听的Server添加到和springboot项目一同启动。" class="headerlink" title="如何将自己编写的对端口3333监听的Server添加到和springboot项目一同启动。"></a>如何将自己编写的对端口3333监听的Server添加到和springboot项目一同启动。</h4><p>​        </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xmlTest;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by kkdezz on .</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> JavaBean.AlaRes;</span><br><span class="line"><span class="keyword">import</span> JavaBean.Alarm;</span><br><span class="line"><span class="keyword">import</span> com.mbg.mapper.AlResMapper;</span><br><span class="line"><span class="keyword">import</span> com.mbg.model.AlRes;</span><br><span class="line"><span class="keyword">import</span> com.mbg.service.AlResService;</span><br><span class="line"><span class="keyword">import</span> com.thoughtworks.xstream.XStream;</span><br><span class="line"><span class="keyword">import</span> com.thoughtworks.xstream.io.xml.StaxDriver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.InputSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.OutputKeys;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Source;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Transformer;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.sax.SAXSource;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.sax.SAXTransformerFactory;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.stream.StreamResult;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port=<span class="number">3333</span>;</span><br><span class="line">    <span class="keyword">private</span> ServerSocket serverSocket;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">&quot;jdbc:mysql://localhost:3306/testcam?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String PASSWORD = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Resource</span></span><br><span class="line"><span class="comment">//    private AlResService alResService;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Server</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        serverSocket = <span class="keyword">new</span> ServerSocket(port,<span class="number">1</span>,InetAddress.getByName(<span class="string">&quot;192.168.0.3&quot;</span>));    <span class="comment">//连接请求队列的长度为3</span></span><br><span class="line">        <span class="comment">//serverSocket.bind(new InetSocketAddress(&quot;192.168.0.3&quot;,3333));</span></span><br><span class="line">        System.out.println(<span class="string">&quot;服务器启动&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            Socket socket=<span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                socket = serverSocket.accept();     <span class="comment">//从连接请求队列中取出一个连接</span></span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;New connection accepted &quot;</span> +</span><br><span class="line">                        socket.getInetAddress() + <span class="string">&quot;:&quot;</span> +socket.getPort());</span><br><span class="line"></span><br><span class="line">                <span class="comment">//3、获取输入流，并读取客户端信息</span></span><br><span class="line">                String line;</span><br><span class="line"></span><br><span class="line">                StringBuffer buffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">                BufferedReader in=<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class="line">                <span class="comment">//由Socket对象得到输入流，并构造相应的BufferedReader对象</span></span><br><span class="line">                PrintWriter writer=<span class="keyword">new</span> PrintWriter(<span class="string">&quot;g:\\test.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class="line">                <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(line.equalsIgnoreCase(<span class="string">&quot;Ending Stream&quot;</span>))&#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    sb.append(line);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                String str = sb.toString();</span><br><span class="line">                System.out.println(<span class="string">&quot;输出&quot;</span>+str );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//                String info = null;</span></span><br><span class="line"><span class="comment">//                while((info=in.readLine())!=null)&#123;</span></span><br><span class="line"><span class="comment">//                    writer.print(info);</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line">                <span class="comment">//由Socket对象得到输出流，并构造PrintWriter对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//                String info = null;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                while((info=in.readLine())!=null)&#123;//循环读取客户端的信息</span></span><br><span class="line"><span class="comment">//                    buffer.append(info);</span></span><br><span class="line"><span class="comment">//                    System.out.println(/*&quot;客户端发送过来的信息&quot; + */  info);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//                byte[] b = new byte[0];</span></span><br><span class="line"><span class="comment">//                b = new byte[socket.getInputStream().available()];</span></span><br><span class="line"><span class="comment">//                //byte b[]=new byte[1024];</span></span><br><span class="line"><span class="comment">//                socket.getInputStream().read(b);</span></span><br><span class="line"><span class="comment">//                String str = new String(b);</span></span><br><span class="line"><span class="comment">//                //System.out.println(formatXml(str));</span></span><br><span class="line"><span class="comment">//                System.out.println(str);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                Alarm alarm=<span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                    XStream xStream = <span class="keyword">new</span> XStream(<span class="keyword">new</span> StaxDriver());</span><br><span class="line">                    xStream.processAnnotations(Alarm.class);</span><br><span class="line"><span class="comment">//            xStream.ignoreUnknownElements();//忽略未知的元素</span></span><br><span class="line">                    xStream.omitField(Alarm.class,&quot;id&quot;);</span><br><span class="line">                    <span class="comment">//将xml转换为javabean</span></span><br><span class="line"></span><br><span class="line">                    alarm = (Alarm) xStream.fromXML(str);</span><br><span class="line"><span class="comment">//                    String filename=(new java.util.Date().getTime()+(int)Math.random()+&quot;.jpg&quot;);</span></span><br><span class="line"><span class="comment">//                    Boolean genPic=false;</span></span><br><span class="line"></span><br><span class="line">                    AlRes alRes=<span class="keyword">new</span> AlRes();</span><br><span class="line"><span class="comment">//                    alRes.setId(Long(1));</span></span><br><span class="line">                    alRes.setCameraid(alarm.getAlarmCamera().getCameraID());</span><br><span class="line">                    alRes.setServerid(alarm.getAlarmCamera().getServerID());</span><br><span class="line">                    alRes.setProducttype(alarm.getAlarmCamera().getProductType());</span><br><span class="line">                    alRes.setCameradescription(alarm.getAlarmCamera().getCameraDescription());</span><br><span class="line">                    alRes.setAlarmid(alarm.getAlarmID());</span><br><span class="line">                    alRes.setAlarmtype(alarm.getAlarmType());</span><br><span class="line">                    alRes.setTypedescription(alarm.getTypeDescription());</span><br><span class="line">                    alRes.setAlarmtime(alarm.getAlarmTime());</span><br><span class="line">                    alRes.setJtealarmtime(alarm.getJTEAlarmTime());</span><br><span class="line">                    alRes.setFilterarea(alarm.getFilterArea());</span><br><span class="line">                    alRes.setAlarmimage(alarm.getAlarmImage());</span><br><span class="line"></span><br><span class="line">                  <span class="comment">//  System.out.println(alResService.createAlRes(alRes));</span></span><br><span class="line">                  <span class="comment">//  System.out.println(alResService.listAllAlRes());</span></span><br><span class="line">                  <span class="comment">//  System.out.println(InjectServiceUtil.getInstance().getAlResService().listAllAlRes());</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//1.加载驱动程序</span></span><br><span class="line">                    Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">                    <span class="comment">//2. 获得数据库连接</span></span><br><span class="line">                    Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);</span><br><span class="line">                    <span class="comment">//3.操作数据库，实现增删改查</span></span><br><span class="line"><span class="comment">//                    Statement stmt = conn.createStatement();</span></span><br><span class="line"></span><br><span class="line">                    String sql =<span class="string">&quot;insert into al_res (CameraID,ServerID,ProductType,CameraDescription,AlarmID,AlarmType,TypeDescription,AlarmTime,JTEAlarmTime,FilterArea,AlarmImage) values(?,?,?,?,?,?,?,?,?,?,?) &quot;</span>;</span><br><span class="line">                    PreparedStatement ptmt = conn.prepareStatement(sql);</span><br><span class="line">                    <span class="comment">//ptmt.setLong(1,alRes.getId());</span></span><br><span class="line">                    ptmt.setString(<span class="number">1</span>,alRes.getCameraid());</span><br><span class="line">                    ptmt.setString(<span class="number">2</span>,alRes.getServerid());</span><br><span class="line">                    ptmt.setString(<span class="number">3</span>,alRes.getProducttype());</span><br><span class="line">                    ptmt.setString(<span class="number">4</span>,alRes.getCameradescription());</span><br><span class="line">                    ptmt.setString(<span class="number">5</span>,alRes.getAlarmid());</span><br><span class="line">                    ptmt.setString(<span class="number">6</span>,alRes.getAlarmtype());</span><br><span class="line">                    ptmt.setString(<span class="number">7</span>,alRes.getTypedescription());</span><br><span class="line">                    ptmt.setString(<span class="number">8</span>,alRes.getAlarmtime());</span><br><span class="line">                    ptmt.setString(<span class="number">9</span>,alRes.getJtealarmtime());</span><br><span class="line">                    ptmt.setString(<span class="number">10</span>,alRes.getFilterarea());</span><br><span class="line"><span class="comment">//                    if(genPic)&#123;</span></span><br><span class="line"><span class="comment">//                        ptmt.setString(11,filename);</span></span><br><span class="line"><span class="comment">//                    &#125;else &#123;</span></span><br><span class="line">                        ptmt.setString(<span class="number">11</span>, alRes.getAlarmimage());</span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line">                    <span class="comment">//执行</span></span><br><span class="line">                    ptmt.execute();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//                    ResultSet rs = stmt.executeQuery(&quot;SELECT * FROM al_res&quot;);</span></span><br><span class="line"><span class="comment">//                    //如果有数据，rs.next()返回true</span></span><br><span class="line"><span class="comment">//                    while(rs.next())&#123;</span></span><br><span class="line"><span class="comment">//                        System.out.println(rs.getString(&quot;CameraID&quot;));</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"></span><br><span class="line">                    System.out.println(<span class="string">&quot;\n*****&quot;</span>+alarm.toString()+<span class="string">&quot;*******\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            socket.getInputStream().close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                XStream xstream = new XStream(new StaxDriver());</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                XStream.setupDefaultSecurity(xstream);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                System.out.println(formatXml(str));</span></span><br><span class="line"><span class="comment">//                Alarm alarm = (Alarm)xstream.fromXML(str);</span></span><br><span class="line"><span class="comment">//                System.out.println(alarm.toString());</span></span><br><span class="line"><span class="comment">//                Student student =(Student)xstream.fromXML(new File(&quot;src/main/resources/demo.xml&quot;));</span></span><br><span class="line"><span class="comment">//                System.out.println(student.toString());</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//writer.println(new String(b));</span></span><br><span class="line"><span class="comment">//                //将其转为XML</span></span><br><span class="line"><span class="comment">//                //1.创建Reader对象</span></span><br><span class="line"><span class="comment">//                SAXReader reader = new SAXReader();</span></span><br><span class="line"><span class="comment">//                //2.加载xml</span></span><br><span class="line"><span class="comment">//                Document document = reader.read(new File(&quot;g:\\test.xml&quot;));</span></span><br><span class="line"><span class="comment">//                Document document = reader.read(socket.getInputStream());</span></span><br><span class="line"><span class="comment">//                //3.获取根节点</span></span><br><span class="line"><span class="comment">//                Element rootElement = document.getRootElement();</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;rootElement:\t\t&quot;+rootElement.getName());</span></span><br><span class="line"><span class="comment">//                Iterator iterator = rootElement.elementIterator();</span></span><br><span class="line"><span class="comment">//                while (iterator.hasNext())&#123;</span></span><br><span class="line"><span class="comment">//                    Element stu = (Element) iterator.next();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                    List&lt;Attribute&gt; attributes = stu.attributes();</span></span><br><span class="line"><span class="comment">//                    System.out.println(&quot;======获取属性值======&quot;);</span></span><br><span class="line"><span class="comment">//                    for (Attribute attribute : attributes) &#123;</span></span><br><span class="line"><span class="comment">//                        System.out.println(attribute.getValue());</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                    System.out.println(&quot;======遍历子节点======&quot;);</span></span><br><span class="line"><span class="comment">//                    Iterator iterator1 = stu.elementIterator();</span></span><br><span class="line"><span class="comment">//                    while (iterator1.hasNext())&#123;</span></span><br><span class="line"><span class="comment">//                        Element stuChild = (Element) iterator1.next();</span></span><br><span class="line"><span class="comment">//                        System.out.println(&quot;节点名：&quot;+stuChild.getName()+&quot;---节点值：&quot;+stuChild.getStringValue());</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//                //转为XML结束</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//                BufferedReader br=new BufferedReader(new InputStreamReader(System.in));</span></span><br><span class="line">                <span class="comment">//由系统标准输入设备构造BufferedReader对象</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;Client:&quot;+in.readLine());</span></span><br><span class="line">                <span class="comment">//在标准输出上打印从客户端读入的字符串</span></span><br><span class="line"><span class="comment">//                line=br.readLine();</span></span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;  <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(socket!=<span class="keyword">null</span>)&#123;socket.close();&#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e) &#123;e.printStackTrace();&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Server server=<span class="keyword">new</span> Server();</span><br><span class="line"><span class="comment">//        Thread.sleep(60000*10);      //睡眠10分钟</span></span><br><span class="line">        server.service();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatXml</span><span class="params">(String xml)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Transformer serializer= SAXTransformerFactory.newInstance().newTransformer();</span><br><span class="line">            serializer.setOutputProperty(OutputKeys.INDENT, <span class="string">&quot;yes&quot;</span>);</span><br><span class="line">            serializer.setOutputProperty(<span class="string">&quot;&#123;http://xml.apache.org/xslt&#125;indent-amount&quot;</span>, <span class="string">&quot;2&quot;</span>);</span><br><span class="line">            Source xmlSource=<span class="keyword">new</span> SAXSource(<span class="keyword">new</span> InputSource(<span class="keyword">new</span> ByteArrayInputStream(xml.getBytes())));</span><br><span class="line">            StreamResult res =  <span class="keyword">new</span> StreamResult(<span class="keyword">new</span> ByteArrayOutputStream());</span><br><span class="line">            serializer.transform(xmlSource, res);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> String(((ByteArrayOutputStream)res.getOutputStream()).toByteArray());</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            <span class="keyword">return</span> xml;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    public Alarm parseConfigProperty() &#123;</span></span><br><span class="line"><span class="comment">//        InputStream in = null;</span></span><br><span class="line"><span class="comment">//        Alarm config=null;</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            XStream xStream = new XStream(new StaxDriver());</span></span><br><span class="line"><span class="comment">//            xStream.processAnnotations(Config.class);</span></span><br><span class="line"><span class="comment">////            xStream.ignoreUnknownElements();//忽略未知的元素</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            //将xml转换为javabean</span></span><br><span class="line"><span class="comment">//            config = (Config) xStream.fromXML(in);</span></span><br><span class="line"><span class="comment">//            return config;</span></span><br><span class="line"><span class="comment">//        &#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="comment">//            e.printStackTrace();</span></span><br><span class="line"><span class="comment">//        &#125; finally &#123;</span></span><br><span class="line"><span class="comment">//            if (in != null) &#123;</span></span><br><span class="line"><span class="comment">//                try &#123;</span></span><br><span class="line"><span class="comment">//                    in.close();</span></span><br><span class="line"><span class="comment">//                &#125; catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">//                    e.printStackTrace();</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        return config;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原本想让这个Server类直接放到springboot项目中添加@component注解注册到容器中实现一并启动，但是发现不行。</p><p>因为springboot中同时只能有一个main函数</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/09/23/docker/"/>
      <url>/2020/09/23/docker/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>title:  docker端口占用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">netstat</span> <span class="string">-nlp</span> <span class="string">|grep</span> <span class="string">docker-proxy|awk</span> <span class="string">&#x27;&#123;print $4&#125;&#x27;</span><span class="string">|sort</span></span><br><span class="line"></span><br><span class="line"><span class="string">查看docker容器占用端口命令</span></span><br></pre></td></tr></table></figure><p>docker run -p 8080:8080 –name mall-tiny-docker <br>–link mysql:db <br>-v /etc/localtime:/etc/localtime <br>-v /root/mydata/app/mall-tiny-docker/logs:/var/logs <br>-d mall-tiny/mall-tiny-docker:0.0.1-SNAPSHOT</p><p>docker run -p 8081:8081 –name mall-tiny-docker-file \ –link mysql:db \ -v /etc/localtime:/etc/localtime \ -v /mydata/app/mall-tiny-docker-file/logs:/var/logs \ -d mall-tiny/mall-tiny-docker-file:0.0.1-SNAPSHOT</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/31/hello-world/"/>
      <url>/2020/07/31/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
